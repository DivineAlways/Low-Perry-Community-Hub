To work with the main branch and create a new branch in your GitHub repository, you'll typically follow these steps in your terminal or command prompt. Below are the detailed instructions:

### Working on the Main Branch

1. **Clone the Repository (if not done yet)**:
   If you haven't cloned your repository yet, do so with the following command:
   ```bash
   git clone https://github.com/your-username/your-repo.git
   cd your-repo
   ```

2. **Switch to the Main Branch**:
   Make sure you are on the main branch. The command to checkout the main branch might look like this:
   ```bash
   git checkout main
   ```
   In some repositories, the default branch might be called `master`, so you would use:
   ```bash
   git checkout master
   ```

3. **Pull the Latest Changes**:
   Before making any changes, itâ€™s a good practice to pull the latest changes from the remote repository:
   ```bash
   git pull origin main  # or `git pull origin master` if using master
   ```

4. **Make Your Changes**:
   Now you can work on your files and make the necessary changes.

5. **Stage Your Changes**:
   After making changes, stage them using:
   ```bash
   git add .
   ```

6. **Commit Your Changes**:
   Commit your changes with a descriptive message:
   ```bash
   git commit -m "Your commit message here"
   ```

7. **Push Your Changes**:
   Finally, push your changes to the remote main branch:
   ```bash
   git push origin main  # or `git push origin master` if using master
   ```

### Adding a New Branch

1. **Create a New Branch**:
   To create and switch to a new branch, use the following command:
   ```bash
   git checkout -b new-branch-name
   ```
   Replace `new-branch-name` with your desired branch name.

2. **Make Changes on the New Branch**:
   Just like before, you can make changes, stage them, and commit them:
   ```bash
   git add .
   git commit -m "Your commit message for new branch"
   ```

3. **Push the New Branch to GitHub**:
   To push your new branch to the remote repository:
   ```bash
   git push origin new-branch-name
   ```

4. **Switching Between Branches**:
   If you need to switch back to the main branch or any other branch, use:
   ```bash
   git checkout main  # or `git checkout master`
   ```
   or
   ```bash
   git checkout other-branch-name
   ```

### Summary of Important Commands

- `git clone https://github.com/your-username/your-repo.git` - Clone a repo.
- `git checkout main` - Switch to the main (or master) branch.
- `git pull origin main` - Pull latest changes from the remote main branch.
- `git add .` - Stage changes.
- `git commit -m "message"` - Commit changes.
- `git push origin main` - Push changes to the remote main branch.
- `git checkout -b new-branch-name` - Create and switch to a new branch.
- `git push origin new-branch-name` - Push the new branch to the remote repository.

Now you should be equipped to work on your GitHub repository with branches.